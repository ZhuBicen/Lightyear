// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: localdb.proto

#ifndef PROTOBUF_localdb_2eproto__INCLUDED
#define PROTOBUF_localdb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "im.pb.h"
// @@protoc_insertion_point(includes)

namespace localdb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_localdb_2eproto();
void protobuf_AssignDesc_localdb_2eproto();
void protobuf_ShutdownFile_localdb_2eproto();

class UserProfile;
class Config;

// ===================================================================

class UserProfile : public ::google::protobuf::MessageLite {
 public:
  UserProfile();
  virtual ~UserProfile();

  UserProfile(const UserProfile& from);

  inline UserProfile& operator=(const UserProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UserProfile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserProfile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserProfile* other);

  // implements Message ----------------------------------------------

  UserProfile* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserProfile& from);
  void MergeFrom(const UserProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional string pw = 2;
  inline bool has_pw() const;
  inline void clear_pw();
  static const int kPwFieldNumber = 2;
  inline const ::std::string& pw() const;
  inline void set_pw(const ::std::string& value);
  inline void set_pw(const char* value);
  inline void set_pw(const char* value, size_t size);
  inline ::std::string* mutable_pw();
  inline ::std::string* release_pw();
  inline void set_allocated_pw(::std::string* pw);

  // optional bool autoSignin = 3;
  inline bool has_autosignin() const;
  inline void clear_autosignin();
  static const int kAutoSigninFieldNumber = 3;
  inline bool autosignin() const;
  inline void set_autosignin(bool value);

  // optional int32 theme = 4;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 4;
  inline ::google::protobuf::int32 theme() const;
  inline void set_theme(::google::protobuf::int32 value);

  // repeated string recentContacts = 5;
  inline int recentcontacts_size() const;
  inline void clear_recentcontacts();
  static const int kRecentContactsFieldNumber = 5;
  inline const ::std::string& recentcontacts(int index) const;
  inline ::std::string* mutable_recentcontacts(int index);
  inline void set_recentcontacts(int index, const ::std::string& value);
  inline void set_recentcontacts(int index, const char* value);
  inline void set_recentcontacts(int index, const char* value, size_t size);
  inline ::std::string* add_recentcontacts();
  inline void add_recentcontacts(const ::std::string& value);
  inline void add_recentcontacts(const char* value);
  inline void add_recentcontacts(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& recentcontacts() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_recentcontacts();

  // repeated .im.ChatMessage chatMessages = 6;
  inline int chatmessages_size() const;
  inline void clear_chatmessages();
  static const int kChatMessagesFieldNumber = 6;
  inline const ::im::ChatMessage& chatmessages(int index) const;
  inline ::im::ChatMessage* mutable_chatmessages(int index);
  inline ::im::ChatMessage* add_chatmessages();
  inline const ::google::protobuf::RepeatedPtrField< ::im::ChatMessage >&
      chatmessages() const;
  inline ::google::protobuf::RepeatedPtrField< ::im::ChatMessage >*
      mutable_chatmessages();

  // @@protoc_insertion_point(class_scope:localdb.UserProfile)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pw();
  inline void clear_has_pw();
  inline void set_has_autosignin();
  inline void clear_has_autosignin();
  inline void set_has_theme();
  inline void clear_has_theme();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::std::string* pw_;
  bool autosignin_;
  ::google::protobuf::int32 theme_;
  ::google::protobuf::RepeatedPtrField< ::std::string> recentcontacts_;
  ::google::protobuf::RepeatedPtrField< ::im::ChatMessage > chatmessages_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_localdb_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_localdb_2eproto();
  #endif
  friend void protobuf_AssignDesc_localdb_2eproto();
  friend void protobuf_ShutdownFile_localdb_2eproto();

  void InitAsDefaultInstance();
  static UserProfile* default_instance_;
};
// -------------------------------------------------------------------

class Config : public ::google::protobuf::MessageLite {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Config& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Config* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Config* other);

  // implements Message ----------------------------------------------

  Config* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .localdb.UserProfile profiles = 1;
  inline int profiles_size() const;
  inline void clear_profiles();
  static const int kProfilesFieldNumber = 1;
  inline const ::localdb::UserProfile& profiles(int index) const;
  inline ::localdb::UserProfile* mutable_profiles(int index);
  inline ::localdb::UserProfile* add_profiles();
  inline const ::google::protobuf::RepeatedPtrField< ::localdb::UserProfile >&
      profiles() const;
  inline ::google::protobuf::RepeatedPtrField< ::localdb::UserProfile >*
      mutable_profiles();

  // @@protoc_insertion_point(class_scope:localdb.Config)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::localdb::UserProfile > profiles_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_localdb_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_localdb_2eproto();
  #endif
  friend void protobuf_AssignDesc_localdb_2eproto();
  friend void protobuf_ShutdownFile_localdb_2eproto();

  void InitAsDefaultInstance();
  static Config* default_instance_;
};
// ===================================================================


// ===================================================================

// UserProfile

// optional string id = 1;
inline bool UserProfile::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserProfile::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserProfile::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserProfile::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& UserProfile::id() const {
  // @@protoc_insertion_point(field_get:localdb.UserProfile.id)
  return *id_;
}
inline void UserProfile::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:localdb.UserProfile.id)
}
inline void UserProfile::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:localdb.UserProfile.id)
}
inline void UserProfile::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:localdb.UserProfile.id)
}
inline ::std::string* UserProfile::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:localdb.UserProfile.id)
  return id_;
}
inline ::std::string* UserProfile::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserProfile::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:localdb.UserProfile.id)
}

// optional string pw = 2;
inline bool UserProfile::has_pw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserProfile::set_has_pw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserProfile::clear_has_pw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserProfile::clear_pw() {
  if (pw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pw_->clear();
  }
  clear_has_pw();
}
inline const ::std::string& UserProfile::pw() const {
  // @@protoc_insertion_point(field_get:localdb.UserProfile.pw)
  return *pw_;
}
inline void UserProfile::set_pw(const ::std::string& value) {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pw_ = new ::std::string;
  }
  pw_->assign(value);
  // @@protoc_insertion_point(field_set:localdb.UserProfile.pw)
}
inline void UserProfile::set_pw(const char* value) {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pw_ = new ::std::string;
  }
  pw_->assign(value);
  // @@protoc_insertion_point(field_set_char:localdb.UserProfile.pw)
}
inline void UserProfile::set_pw(const char* value, size_t size) {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pw_ = new ::std::string;
  }
  pw_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:localdb.UserProfile.pw)
}
inline ::std::string* UserProfile::mutable_pw() {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pw_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:localdb.UserProfile.pw)
  return pw_;
}
inline ::std::string* UserProfile::release_pw() {
  clear_has_pw();
  if (pw_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pw_;
    pw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserProfile::set_allocated_pw(::std::string* pw) {
  if (pw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pw_;
  }
  if (pw) {
    set_has_pw();
    pw_ = pw;
  } else {
    clear_has_pw();
    pw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:localdb.UserProfile.pw)
}

// optional bool autoSignin = 3;
inline bool UserProfile::has_autosignin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserProfile::set_has_autosignin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserProfile::clear_has_autosignin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserProfile::clear_autosignin() {
  autosignin_ = false;
  clear_has_autosignin();
}
inline bool UserProfile::autosignin() const {
  // @@protoc_insertion_point(field_get:localdb.UserProfile.autoSignin)
  return autosignin_;
}
inline void UserProfile::set_autosignin(bool value) {
  set_has_autosignin();
  autosignin_ = value;
  // @@protoc_insertion_point(field_set:localdb.UserProfile.autoSignin)
}

// optional int32 theme = 4;
inline bool UserProfile::has_theme() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserProfile::set_has_theme() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserProfile::clear_has_theme() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserProfile::clear_theme() {
  theme_ = 0;
  clear_has_theme();
}
inline ::google::protobuf::int32 UserProfile::theme() const {
  // @@protoc_insertion_point(field_get:localdb.UserProfile.theme)
  return theme_;
}
inline void UserProfile::set_theme(::google::protobuf::int32 value) {
  set_has_theme();
  theme_ = value;
  // @@protoc_insertion_point(field_set:localdb.UserProfile.theme)
}

// repeated string recentContacts = 5;
inline int UserProfile::recentcontacts_size() const {
  return recentcontacts_.size();
}
inline void UserProfile::clear_recentcontacts() {
  recentcontacts_.Clear();
}
inline const ::std::string& UserProfile::recentcontacts(int index) const {
  // @@protoc_insertion_point(field_get:localdb.UserProfile.recentContacts)
  return recentcontacts_.Get(index);
}
inline ::std::string* UserProfile::mutable_recentcontacts(int index) {
  // @@protoc_insertion_point(field_mutable:localdb.UserProfile.recentContacts)
  return recentcontacts_.Mutable(index);
}
inline void UserProfile::set_recentcontacts(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:localdb.UserProfile.recentContacts)
  recentcontacts_.Mutable(index)->assign(value);
}
inline void UserProfile::set_recentcontacts(int index, const char* value) {
  recentcontacts_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:localdb.UserProfile.recentContacts)
}
inline void UserProfile::set_recentcontacts(int index, const char* value, size_t size) {
  recentcontacts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:localdb.UserProfile.recentContacts)
}
inline ::std::string* UserProfile::add_recentcontacts() {
  return recentcontacts_.Add();
}
inline void UserProfile::add_recentcontacts(const ::std::string& value) {
  recentcontacts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:localdb.UserProfile.recentContacts)
}
inline void UserProfile::add_recentcontacts(const char* value) {
  recentcontacts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:localdb.UserProfile.recentContacts)
}
inline void UserProfile::add_recentcontacts(const char* value, size_t size) {
  recentcontacts_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:localdb.UserProfile.recentContacts)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UserProfile::recentcontacts() const {
  // @@protoc_insertion_point(field_list:localdb.UserProfile.recentContacts)
  return recentcontacts_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UserProfile::mutable_recentcontacts() {
  // @@protoc_insertion_point(field_mutable_list:localdb.UserProfile.recentContacts)
  return &recentcontacts_;
}

// repeated .im.ChatMessage chatMessages = 6;
inline int UserProfile::chatmessages_size() const {
  return chatmessages_.size();
}
inline void UserProfile::clear_chatmessages() {
  chatmessages_.Clear();
}
inline const ::im::ChatMessage& UserProfile::chatmessages(int index) const {
  // @@protoc_insertion_point(field_get:localdb.UserProfile.chatMessages)
  return chatmessages_.Get(index);
}
inline ::im::ChatMessage* UserProfile::mutable_chatmessages(int index) {
  // @@protoc_insertion_point(field_mutable:localdb.UserProfile.chatMessages)
  return chatmessages_.Mutable(index);
}
inline ::im::ChatMessage* UserProfile::add_chatmessages() {
  // @@protoc_insertion_point(field_add:localdb.UserProfile.chatMessages)
  return chatmessages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::im::ChatMessage >&
UserProfile::chatmessages() const {
  // @@protoc_insertion_point(field_list:localdb.UserProfile.chatMessages)
  return chatmessages_;
}
inline ::google::protobuf::RepeatedPtrField< ::im::ChatMessage >*
UserProfile::mutable_chatmessages() {
  // @@protoc_insertion_point(field_mutable_list:localdb.UserProfile.chatMessages)
  return &chatmessages_;
}

// -------------------------------------------------------------------

// Config

// repeated .localdb.UserProfile profiles = 1;
inline int Config::profiles_size() const {
  return profiles_.size();
}
inline void Config::clear_profiles() {
  profiles_.Clear();
}
inline const ::localdb::UserProfile& Config::profiles(int index) const {
  // @@protoc_insertion_point(field_get:localdb.Config.profiles)
  return profiles_.Get(index);
}
inline ::localdb::UserProfile* Config::mutable_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:localdb.Config.profiles)
  return profiles_.Mutable(index);
}
inline ::localdb::UserProfile* Config::add_profiles() {
  // @@protoc_insertion_point(field_add:localdb.Config.profiles)
  return profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::localdb::UserProfile >&
Config::profiles() const {
  // @@protoc_insertion_point(field_list:localdb.Config.profiles)
  return profiles_;
}
inline ::google::protobuf::RepeatedPtrField< ::localdb::UserProfile >*
Config::mutable_profiles() {
  // @@protoc_insertion_point(field_mutable_list:localdb.Config.profiles)
  return &profiles_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace localdb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_localdb_2eproto__INCLUDED
